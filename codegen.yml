overwrite: true

schema:
  - "packages/graphql-server/src/schemas/**/*.graphql"

generates:
  packages/graphql-server/src/__generated__/schema-types.ts:
    plugins:
      - typescript
    config:
      enumsAsTypes: true
      useIndexSignature: true
      useTypeImports: true

  packages/graphql-server/src/__generated__/resolver-types.ts:
    plugins:
      - add:
          content: "import type * as Types from './schema-types';"
      - typescript-resolvers
    config:
      contextType: "../context#ArchivistGraphQLContext"
      namespacedImportName: Types
      useTypeImports: true
      mappers:
        Campaign: "@repo/db#Campaign"
        User: "@repo/db#User"
        Seed: "@repo/db#Seed"
        Faction: "@repo/db#Faction"
      resolverTypeWrapperSignature: "Promise<T> | T | import('@repo/db').PrismaPromise<T>"

  packages/clients/src/graphql/types/:
    schema: "packages/graphql-server/src/schemas/**/*.graphql"
    documents:
      - "packages/clients/src/graphql/**/*.ts"
    preset: client
    presetConfig:
      fragmentMasking: false
    config:
      enumsAsTypes: true
      useIndexSignature: true
      useTypeImports: true

  packages/clients/src/graphql/index.ts:
    plugins:
      - add:
          content: "export * from \"./client\";\nexport * from \"./mutations\";\nexport * from \"./queries\";\nexport * from \"./types\";\nexport type { Campaign, Faction, Seed, Maybe, Scalars } from \"./types/graphql\";"
